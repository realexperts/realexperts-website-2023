---
let {
  videoUrl,
  captionUrl,
  imageUrl,
  imageAlt = '',
  max_width_container
} = Astro.props;

const NO_MAX_WIDTH = 'max-w-none';
const maxWidths = new Set([
  NO_MAX_WIDTH,
  'max-w-xs',
  'max-w-sm',
  'max-w-md',
  'max-w-lg',
  'max-w-xl',
  'max-w-2xl',
  'max-w-3xl',
  'max-w-4xl'
]);
const getMaxWidthClass = (width, defaultValue = NO_MAX_WIDTH) =>
  maxWidths.has(width) ? width : defaultValue;
---

<div
  class:list={[
    'media-component group relative mx-auto',
    getMaxWidthClass(max_width_container)
  ]}
>
  <!-- Video Thumbnail mit Play-Icon -->
  {
    videoUrl && imageUrl && (
      <div class='video-thumbnail-wrapper absolute bottom-0 left-0 right-0 top-0 z-10 cursor-pointer'>
        <img
          class='h-full w-full object-cover'
          src={imageUrl}
          alt='Video Thumbnail'
        />
        <div class='absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 transform'>
          <div class='play-icon text-8xl text-white'>
            <i class='fa-solid fa-play duration-110 drop-shadow-md transition ease-in-out group-hover:scale-125' />
          </div>
        </div>
      </div>
    )
  }

  {
    !videoUrl && imageUrl && (
      <img class='w-full' src={imageUrl} alt={imageAlt} />
    )
  }

  {
    videoUrl && (
      // eslint-disable-next-line jsx-a11y/media-has-caption
      <video class='video-player w-full' controls src={videoUrl}>
        {captionUrl && (
          <track kind='captions' src={captionUrl} srclang='de' label='German' />
        )}
      </video>
    )
  }
</div>

<script>
  (function () {
    const videoComponents = document.querySelectorAll('.media-component');

    for (const component of videoComponents) {
      const thumbnailWrapper = component.querySelector(
        '.video-thumbnail-wrapper'
      );
      const videoPlayer = component.querySelector('.video-player');

      if (thumbnailWrapper && videoPlayer) {
        const playIcon = thumbnailWrapper.querySelector('.play-icon');

        const thumbnailWrapperWidth = thumbnailWrapper.offsetWidth;
        // Set the font size of the play icon
        // based on the width of the thumbnail wrapper
        playIcon.style.fontSize = `${thumbnailWrapperWidth / 8}px`;

        thumbnailWrapper.addEventListener('click', function () {
          thumbnailWrapper.style.display = 'none';
          videoPlayer.style.display = 'block';
          videoPlayer.play();
        });
      }
    }
  })();
</script>
