---
import type { Section } from '@/lib/schema';
import { twMerge } from 'tailwind-merge';

export interface Props extends Section {
  background?: 'blue' | 'gray' | 'transparent' | 'turquoise' | 'white';
  standardPadding?: boolean;
  section?: boolean;
  color?: string;
}

const {
  background = 'white',
  standardPadding = true,
  section,
  section_styles,
  color,
  slug
} = Astro.props;

const colorSchema = {
  blue: 'bg-re-blue text-white',
  gray: 'bg-re-gray text-black',
  transparent: 'bg-transparent text-black',
  turquoise: 'bg-re-turquoise-light text-re-blue',
  white: 'bg-white text-re-blue'
};

const stylesMapping = {
  full_width: 'w-full'
};

const sectionStyles = section_styles
  ?.map((style) => {
    // Check if cornerMapping contains a mapping for the current corner
    if (style in stylesMapping) {
      return `${stylesMapping[style]}`;
    }
    // If no mapping is found, return the original string
    return style;
  })
  .join(' ');

const sectionWidth =
  !section_styles?.includes('full_width') && 'w-full max-w-website mx-auto';

const classes = twMerge(
  colorSchema[background],
  sectionWidth,
  sectionStyles,
  standardPadding && 'py-16'
);
---

<section class:list={[classes]} style={`background-color: ${color}`} id={slug}>
  <slot />
</section>
