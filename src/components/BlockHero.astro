---
import { Debug } from 'astro/components';
import { CTAExternal, CTAInternal } from "../lib/schema";
import Button from './Button.astro';
import { getImage } from 'astro:assets';
import {BlockHero} from "../lib/schema";

export interface Props extends BlockHero {}

const {
    image,
    image_styles,
    title,
    subtitle,
    ctas
} = Astro.props;

const src = import.meta.env.DIRECTUS_URL + '/assets/' + image.id
const optimizedBackground = await getImage({src, format: 'jpg', width: image.width, height: image.height, quality: 80})

const isInternalLink = (b: unknown): b is CTAInternal => {
    return (b as CTAInternal).collection === 'element_cta_internal'
}

const isExternalLink = (b: unknown): b is CTAExternal => {
    return (b as CTAExternal).collection === 'element_cta_external'
}

const stylesMapping = {
    "rounded_tl": "rounded-tl-[70px]",
    "rounded_tr": "rounded-tr-[70px]",
    "rounded_bl": "rounded-bl-[70px]",
    "rounded_br": "rounded-br-[70px]"
};

const imageStyles = image_styles.map(corner => {
    // Check if cornerMapping contains a mapping for the current corner
    if (corner in stylesMapping) {
        return `${stylesMapping[corner]}`;
    }
    // If no mapping is found, return the original string
    return corner;
}).join(' ');

---
<div
    class={`bg-re-gray flex h-[488px] items-center bg-cover bg-center ${imageStyles}`}
    style={`background-image: url(${optimizedBackground.src});`}
>
    <div class="mx-24 mb-2 w-[620px] text-white">
        <div class="mb-4 font-serif text-5xl font-semibold" set:text={title} />
        <div class="mb-16 text-lg font-medium" set:html={subtitle} />
        {ctas.map((cta) => {
            return (
                <div class="mb-4">
                    {isInternalLink(cta) && (
                        <Button color="red" size="lg" link={cta.item.linked_page.url} label={cta.item.title} />
                    )}
                    {isExternalLink(cta) && (
                        <Button color="red" size="lg" link={cta.item.url} label={cta.item.title} />
                    )}
                </div>
            )
        })}
    </div>
</div>
