---
import Block from '@/components/Block.astro';
import BlockSideBySide from '@/components/BlockSideBySide.astro';
import { client } from '@/lib/directus';
import { readItem } from '@directus/sdk';
import BlockMediaLoader from './BlockMediaLoader.astro';
import BlockTextLoader from './BlockTextLoader.astro';

type Props = {
  itemId: number;
};

const { itemId } = Astro.props;

export const loadBlockText = async (itemId: number) => {
  return await client.request(
    readItem('block_side_by_side', itemId, {
      fields: [
        'order',
        {
          left_column: ['collection', 'item']
        },
        { right_column: ['collection', 'item'] }
      ]
    })
  );
};

const response = await loadBlockText(itemId);

const properties = {
  order: response.order,
  left_column: response.left_column?.map((left) => {
    return {
      collection: left.collection,
      item: left.item
    };
  }),
  right_column: response.right_column?.map((right) => {
    return {
      collection: right.collection,
      item: right.item
    };
  })
};
---

<BlockSideBySide order={properties.order}>
  <Fragment slot='left'>
    {
      properties.left_column?.map(({ item, collection }) => (
        <>
          {typeof item === 'string' && (
            <>
              {collection === 'block_text' && (
                <Block>
                  <BlockTextLoader itemId={item} />
                </Block>
              )}
              {collection === 'block_media' && (
                <Block>
                  <BlockMediaLoader itemId={item} />
                </Block>
              )}
            </>
          )}
        </>
      ))
    }
  </Fragment>
  <Fragment slot='right'>
    {
      properties.right_column?.map(({ item, collection }) => (
        <>
          {typeof item === 'string' && (
            <>
              {collection === 'block_text' && (
                <Block>
                  <BlockTextLoader itemId={item} />
                </Block>
              )}
              {collection === 'block_media' && (
                <Block>
                  <BlockMediaLoader itemId={item} />
                </Block>
              )}
            </>
          )}
        </>
      ))
    }
  </Fragment>
</BlockSideBySide>
