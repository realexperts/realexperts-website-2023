---
import {
  getAlignmentClass,
  getMaxWidthClass,
  getTextColorClass
} from '@/lib/util';
import { loadBlockText } from '@/loaders/BlockTextLoader.astro';
import { marked } from 'marked';
import { twMerge } from 'tailwind-merge';

type Props = {
  alignment?: Awaited<ReturnType<typeof loadBlockText>>['alignment'];
  colorHeadline?: Awaited<ReturnType<typeof loadBlockText>>['color_headline'];
  colorText?: Awaited<ReturnType<typeof loadBlockText>>['color_text'];
  maxWidthContainer?: Awaited<
    ReturnType<typeof loadBlockText>
  >['max_width_container'];
  text?: Awaited<ReturnType<typeof loadBlockText>>['text'];
};

const { alignment, colorHeadline, colorText, maxWidthContainer, text } =
  Astro.props;

const renderer = new marked.Renderer();

const textClassNames = twMerge('font-sans', getTextColorClass(colorText));

renderer.heading = (content, level) => {
  const headingClassNames = twMerge(
    'font-serif font-semibold',
    getTextColorClass(colorHeadline)
  );

  switch (level) {
    case 1: {
      return `<h1 class="${twMerge(
        'text-5xl mb-8',
        headingClassNames
      )}">${content}</h1>`;
    }
    case 2: {
      return `<h2 class="${twMerge(
        'text-4xl mb-8',
        headingClassNames
      )}">${content}</h2>`;
    }
    case 3: {
      return `<h3 class="${twMerge(
        'text-3xl mb-8',
        headingClassNames
      )}">${content}</h3>`;
    }
    case 4: {
      return `<h4 class="${twMerge(
        'text-2xl mb-8',
        headingClassNames
      )}">${content}</h4>`;
    }
    case 5: {
      return `<h5 class="${twMerge(
        'text-xl mb-8',
        headingClassNames
      )}">${content}</h5>`;
    }
    case 6: {
      return `<h6 class="${twMerge(
        'text-lg mb-8',
        headingClassNames
      )}">${content}</h6>`;
    }
    default: {
      return `<h${level} class="${twMerge(
        'text-5xl mb-8',
        headingClassNames
      )}">${content}</h${level}>`;
    }
  }
};

// Use the custom renderer in the marked options
marked.setOptions({ renderer });
---

<div class:list={['mx-auto', getMaxWidthClass(maxWidthContainer)]}>
  <div
    class:list={[
      'prose prose-xl my-8 max-w-none prose-a:text-inherit prose-strong:text-inherit',
      textClassNames,
      getAlignmentClass(alignment)
    ]}
    set:html={marked(text ?? '')}
  />
</div>
