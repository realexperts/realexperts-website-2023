---
import type { getBlockLogoSlider } from '@/loaders/BlockLogoSliderLoader.astro';
import { Image } from 'astro:assets';

type Properties = Awaited<ReturnType<typeof getBlockLogoSlider>>;

const { slides } = Astro.props as Properties;
---

<div class='flex items-center justify-center'>
  <div
    class='swiper-button-prev cursor-pointer p-1 text-3xl text-zinc-300 transition-colors duration-200 ease-in-out hover:text-primary'
  >
    <i class='fa-solid fa-chevron-left'></i>
  </div>
  <div class='swiper logo-slider'>
    <div class='swiper-wrapper'>
      {
        slides?.map((slide) => (
          <div class='swiper-slide overflow-hidden px-1'>
            <div class='flex items-center justify-center'>
              <Image
                src={slide.image.src}
                alt={slide.title ?? ''}
                class='h-[70px] w-[185px] object-contain'
                width='185'
                height='70'
                widths={[185, 370, 555]}
              />
            </div>
          </div>
        ))
      }
    </div>
  </div>
  <div
    class='swiper-button-next cursor-pointer p-1 text-3xl text-zinc-300 transition-colors duration-200 ease-in-out hover:text-primary'
  >
    <i class='fa-solid fa-chevron-right'></i>
  </div>
</div>

<script>
  import Swiper from 'swiper';
  import { Navigation } from 'swiper/modules';
  import 'swiper/css';

  for (const element of document.querySelectorAll('.logo-slider')) {
    const swiperElement = element;
    const nextButton = swiperElement.parentElement?.querySelector(
      '.swiper-button-next'
    );
    const previousButton = swiperElement.parentElement?.querySelector(
      '.swiper-button-prev'
    );

    const _swiper = new Swiper(swiperElement as HTMLElement, {
      slidesPerView: 5,
      loop: true,
      modules: [Navigation],

      breakpoints: {
        1280: {
          slidesPerView: 5
        },
        1024: {
          slidesPerView: 4
        },
        768: {
          slidesPerView: 4
        },
        640: {
          slidesPerView: 3
        },
        0: {
          slidesPerView: 2
        }
      },

      navigation: {
        nextEl: nextButton as HTMLElement,
        prevEl: previousButton as HTMLElement
      }
    });

    _swiper.on('slideChange', () => {
      console.log('slideChange');
    });
  }
</script>
