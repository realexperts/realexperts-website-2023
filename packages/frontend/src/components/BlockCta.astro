---
import type { getBlockCta } from '@/loaders/BlockCtaLoader.astro';
import type { getTypedCtaArray } from '@/loaders/cta-helpers';
import CTAExternal from './CtaExternal.astro';
import CTAInternal from './CtaInternal.astro';

type Properties = {
  alignment: Awaited<ReturnType<typeof getBlockCta>>['alignment'];
  ctas: Awaited<ReturnType<typeof getTypedCtaArray>>;
};

const { alignment, ctas } = Astro.props as Properties;

let classNames;
if (alignment === 'center') {
  classNames = 'justify-center';
} else if (alignment === 'right') {
  classNames = 'justify-end';
} else {
  classNames = 'justify-start';
}
---

<div class:list={['flex gap-6', classNames]}>
  {
    ctas?.map((cta) => {
      return (
        <>
          {cta.type === 'internal' && cta.title && (
            <CTAInternal type='internal' title={cta.title} url={cta.url} />
          )}
          {cta.type === 'external' && cta.title && cta.url && (
            <CTAExternal type='external' title={cta.title} url={cta.url} />
          )}
        </>
      );
    })
  }
</div>
